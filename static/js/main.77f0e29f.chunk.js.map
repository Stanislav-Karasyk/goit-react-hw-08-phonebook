{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/appBar/AppBar.module.css","components/container/Container.module.css","redux/contact/contact-actions.js","redux/contact/contact-reducer.js","redux/auth/auth-reducer.js","redux/store.js","redux/auth/auth-selectors.js","components/authNav/AuthNav.js","components/navigation/Navigation.js","components/userMenu/blank-profile-picture.webp","components/userMenu/UserMenu.js","components/appBar/AppBar.js","components/container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","components/App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","module","exports","fetchContactRequest","fetchContactSuccess","fetchContactError","createContactRequest","createContactSuccess","createContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","addFilterValue","contacts","createReducer","_","payload","state","filter","item","id","Number","loading","hendleError","clearError","error","combineReducers","initialUserState","name","email","user","setError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contact","contactReducer","devTools","process","persistor","persistStore","getIsAuthenticated","getUsername","AuthNav","className","exact","to","activeClassName","connect","mapDispatchToProps","onLogout","avatar","defaultAvatar","src","alt","width","type","onClick","styles","header","Container","children","container","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","this","onGetCurrentUser","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77f0e29f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions.js';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2wECc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3-Vb3\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nconst fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nconst createContactRequest = createAction('contacts/createContactRequest');\r\nconst createContactSuccess = createAction('contacts/createContactSuccess');\r\nconst createContactError = createAction('contacts/createContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst addFilterValue = createAction('contact/addFilterValue');\r\n\r\nexport {\r\n  addFilterValue,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addFilterValue,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\nimport { logoutSuccess } from '../auth/auth-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [createContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => [\r\n    ...state.filter(item => item.id !== Number(payload)),\r\n  ],\r\n  [logoutSuccess]: () => [],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [addFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [createContactRequest]: () => true,\r\n  [createContactSuccess]: () => false,\r\n  [createContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst hendleError = (_, { payload }) => payload.response.data;\r\nconst clearError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactRequest]: clearError,\r\n  [fetchContactError]: hendleError,\r\n  [createContactRequest]: clearError,\r\n  [createContactError]: hendleError,\r\n  [deleteContactRequest]: clearError,\r\n  [deleteContactError]: hendleError,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactReducer from './contact/contact-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contact: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\n\r\n\r\nexport { getIsAuthenticated, getUsername };\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"list\">\r\n        <li>\r\n          <NavLink\r\n            exact\r\n            to=\"/register\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLinkActive\"\r\n          >\r\n            Registration\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            exact\r\n            to=\"/login\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLinkActive\"\r\n          >\r\n            Login\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <ul className=\"list\">\r\n      <li>\r\n        <NavLink\r\n          to=\"/\"\r\n          exact\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLinkActive\"\r\n        >\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      {isAuthenticated && (\r\n        <li>\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLinkActive\"\r\n          >\r\n            Contacts\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/blank-profile-picture.efadb13d.webp\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport { getUsername } from '../../redux/auth/auth-selectors';\r\nimport defaultAvatar from './blank-profile-picture.webp';\r\n\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div>\r\n    <img src={avatar} alt=\"\" width=\"32\" />\r\n    <span>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  name: getUsername(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logOut,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\nimport AuthNav from '../authNav/AuthNav';\r\nimport Navigation from '../navigation/Navigation';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\r\n\r\nexport default Container;\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { getCurrentUser } from '../redux/auth/auth-operations';\r\nimport AppBar from './appBar/AppBar';\r\nimport Container from '../components/container/Container';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('../pages/homePage/HomePage' /* webpackChunkName: \"homePage\" */),\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import(\r\n    '../pages/registerPage/RegisterPage' /* webpackChunkName: \"registerPage\" */\r\n  ),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import('../pages/loginPage/LoginPage' /* webpackChunkName: \"loginPage\" */),\r\n);\r\nconst ContactsPage = lazy(() =>\r\n  import(\r\n    '../pages/contactsPage/ContactsPage' /* webpackChunkName: \"contactsPage\" */\r\n  ),\r\n);\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\" component={HomePage} />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={RegisterPage}\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={LoginPage}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/contacts\"\r\n              redirectTo=\"/login\"\r\n              component={ContactsPage}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}